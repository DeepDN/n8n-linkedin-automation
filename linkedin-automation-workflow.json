{
  "name": "LinkedIn AI Content Automation",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10 * * *"
            }
          ]
        }
      },
      "name": "Daily Trigger (10 AM IST)",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300],
      "id": "cron-trigger"
    },
    {
      "parameters": {
        "url": "https://feeds.feedburner.com/oreilly/radar",
        "options": {}
      },
      "name": "Scrape Tech Content",
      "type": "n8n-nodes-base.rss",
      "typeVersion": 1,
      "position": [460, 300],
      "id": "content-scraper"
    },
    {
      "parameters": {
        "jsCode": "// Filter and select relevant DevOps/AI content\nconst items = $input.all();\nconst keywords = ['devops', 'ai', 'artificial intelligence', 'machine learning', 'automation', 'kubernetes', 'docker', 'cloud', 'aws', 'azure'];\n\nconst filteredItems = items.filter(item => {\n  const title = item.json.title.toLowerCase();\n  const description = item.json.description.toLowerCase();\n  return keywords.some(keyword => title.includes(keyword) || description.includes(keyword));\n});\n\n// Select random item from filtered results\nif (filteredItems.length > 0) {\n  const randomIndex = Math.floor(Math.random() * filteredItems.length);\n  return [filteredItems[randomIndex]];\n}\n\nreturn [];"
      },
      "name": "Filter Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300],
      "id": "content-filter"
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "chatId": "gpt-4",
        "text": "=Create an engaging LinkedIn post based on this content:\n\nTitle: {{ $json.title }}\nDescription: {{ $json.description }}\nURL: {{ $json.link }}\n\nRequirements:\n- Write for DevOps/AI professionals\n- Keep it under 1300 characters\n- Include a compelling hook\n- Add a call-to-action\n- Make it conversational and engaging\n- Don't include hashtags (they'll be generated separately)\n\nFormat the response as a clean LinkedIn post ready to publish."
      },
      "name": "Generate Post Content",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [900, 300],
      "id": "ai-content-generator"
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "chatId": "gpt-4",
        "text": "=Generate 8-12 SEO-optimized hashtags for this LinkedIn post about DevOps/AI:\n\nPost content: {{ $('Generate Post Content').item.json.choices[0].message.content }}\n\nRequirements:\n- Mix of popular and niche hashtags\n- Include DevOps, AI, and tech-related tags\n- Consider trending topics\n- Format as a single line with spaces between hashtags\n- Start each hashtag with #\n\nExample format: #DevOps #AI #MachineLearning #CloudComputing #Automation"
      },
      "name": "Generate Hashtags",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [900, 480],
      "id": "hashtag-generator"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "generate",
        "prompt": "=Create a professional, modern image for a LinkedIn post about: {{ $('Filter Content').item.json.title }}. Style: Clean, tech-focused, professional color scheme (blues, whites, grays), suitable for DevOps/AI content. Include subtle tech elements like code snippets, cloud icons, or AI symbols. No text overlay needed.",
        "size": "1024x1024",
        "responseFormat": "url"
      },
      "name": "Generate Image",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [900, 660],
      "id": "image-generator"
    },
    {
      "parameters": {
        "jsCode": "// Combine all generated content\nconst postContent = $('Generate Post Content').item.json.choices[0].message.content;\nconst hashtags = $('Generate Hashtags').item.json.choices[0].message.content;\nconst imageUrl = $('Generate Image').item.json.data[0].url;\nconst originalUrl = $('Filter Content').item.json.link;\nconst originalTitle = $('Filter Content').item.json.title;\n\n// Combine post content with hashtags\nconst fullPost = `${postContent}\\n\\n${hashtags}`;\n\nreturn [{\n  json: {\n    postText: fullPost,\n    imageUrl: imageUrl,\n    originalUrl: originalUrl,\n    originalTitle: originalTitle,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "name": "Combine Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 480],
      "id": "content-combiner"
    },
    {
      "parameters": {
        "resource": "post",
        "operation": "create",
        "text": "={{ $json.postText }}",
        "additionalFields": {
          "mediaUrl": "={{ $json.imageUrl }}"
        }
      },
      "name": "Post to LinkedIn",
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [1340, 480],
      "id": "linkedin-publisher"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "YOUR_GOOGLE_SHEET_ID",
        "sheetName": "LinkedIn Posts",
        "columnToMatchOn": "timestamp",
        "valueToMatchOn": "={{ $json.timestamp }}",
        "valuesToSend": {
          "timestamp": "={{ $json.timestamp }}",
          "post_text": "={{ $json.postText }}",
          "image_url": "={{ $json.imageUrl }}",
          "original_url": "={{ $json.originalUrl }}",
          "original_title": "={{ $json.originalTitle }}",
          "status": "published"
        }
      },
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1560, 480],
      "id": "sheets-logger"
    }
  ],
  "connections": {
    "Daily Trigger (10 AM IST)": {
      "main": [
        [
          {
            "node": "Scrape Tech Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Tech Content": {
      "main": [
        [
          {
            "node": "Filter Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Content": {
      "main": [
        [
          {
            "node": "Generate Post Content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate Hashtags",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Post Content": {
      "main": [
        [
          {
            "node": "Combine Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Hashtags": {
      "main": [
        [
          {
            "node": "Combine Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "main": [
        [
          {
            "node": "Combine Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Content": {
      "main": [
        [
          {
            "node": "Post to LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to LinkedIn": {
      "main": [
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
